// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaterCity.Repository.Infrastructure;

#nullable disable

namespace WaterCity.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230710100249_Update4")]
    partial class Update4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChucNangEntityNguoiDungEntity", b =>
                {
                    b.Property<string>("ChucNangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChucNangId", "NguoiDungId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ChucNangEntityNguoiDungEntity");
                });

            modelBuilder.Entity("ChucVuEntityNguoiDungEntity", b =>
                {
                    b.Property<string>("ChucVuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChucVuId", "NguoiDungId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ChucVuEntityNguoiDungEntity");
                });

            modelBuilder.Entity("NguoiDungEntityNhaMayEntity", b =>
                {
                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NguoiDungId", "NhaMayId");

                    b.HasIndex("NhaMayId");

                    b.ToTable("NguoiDungEntityNhaMayEntity");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiSoDongHoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ChiSoCu")
                        .HasColumnType("int");

                    b.Property<int?>("ChiSoCuoiCu")
                        .HasColumnType("int");

                    b.Property<int?>("ChiSoDauCu")
                        .HasColumnType("int");

                    b.Property<int>("ChiSoMoi")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DongHoNuocId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayDoc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayDongBo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SoDocChiSoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThaiGhiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tthu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DongHoNuocId");

                    b.HasIndex("SoDocChiSoId");

                    b.HasIndex("TrangThaiGhiId");

                    b.ToTable("ChiSoDongHo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiTietGiaEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DenSo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DoiTuongGiaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaCoVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTaChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TuSo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DoiTuongGiaId");

                    b.ToTable("ChiTietGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiTietHoaDonEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("SoTieuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.ToTable("ChiTietHoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChucNangEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChucNang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucNang");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChucVuEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhMucSeriHoaDonEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SoHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucSeriHoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhMucThongBaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("HinhThuc")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiGuiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLanGui")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ThoiGian")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("DanhMucThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhSachDoiTuongGiaEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KyHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhSachDoiTuongGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhSachHoDanEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhuVucId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("SoHo")
                        .HasColumnType("int");

                    b.Property<int>("SoKhau")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongGoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhuVucId");

                    b.ToTable("DanhSachHoDan");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DoiTuongGiaEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BVMT")
                        .HasColumnType("int");

                    b.Property<bool>("CoToiThieu")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DTTinhGia")
                        .HasColumnType("int");

                    b.Property<string>("DanhSachDoiTuongGiaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("KieuTinh")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayBatDau")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayKetThuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PhiBvmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhiDuyTriId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("TinhTu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DanhSachDoiTuongGiaId");

                    b.HasIndex("PhiDuyTriId");

                    b.ToTable("DoiTuongGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DongHoNuocEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DongHoChaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DongHoNuocEntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HopDongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LoaiDongHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyDoHuy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiQuanLyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhamVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriDongHo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiSuDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DongHoNuocEntityId");

                    b.HasIndex("HopDongId");

                    b.ToTable("DongHoNuoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DongHoNuocSuCoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CachKhacPhuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DongHoNuocId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgaySuCo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiBaoCaoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiThucHienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuCoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TienDo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DongHoNuocId");

                    b.HasIndex("SuCoId");

                    b.ToTable("DongHoNuocSuCo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HoaDonEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiSoDongHoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiThuTienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PhiBvmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PhiDtdn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhienInThongBaoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SeriHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TongTienTruocVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChiSoDongHoId");

                    b.HasIndex("PhienInThongBaoId");

                    b.HasIndex("SeriHoaDon");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HopDongEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Diachi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoiTuongGiaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HopDongId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhuVucThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KinhDo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MucDichSuDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("NgayCoHieuLuc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayKyHopDong")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayLapDat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongThucThanhToanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuyenDocId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ViDo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DoiTuongGiaId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("TuyenDocId");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoiTuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LoaiKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSoThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayCapCmnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguonNuoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaMayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiCapCmnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoCmnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoGcn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoHo")
                        .HasColumnType("int");

                    b.Property<int>("SoKhau")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongGoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KhuVucEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenKhuVuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VungId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VungId");

                    b.ToTable("KhuVuc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KyGhiChiSoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("NgayHoaDon")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgaySuDungDen")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgaySuDungTu")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NhaMayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KyGhiChiSo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.LichSuSMSEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HopDongId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MauTinSMSId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NguoiGuidId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongTin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThaiGui")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MauTinSMSId");

                    b.ToTable("LichSuSMS");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.MauTinSMSEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApiEndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MauTinSMS");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.NguoiDungEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DangNhapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.NhaMayEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenNhaMay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhaMay");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.NhatKyDuLieuEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DuLieuSau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuLieuTruoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaMayId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ThoiGian")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ThuocBang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhatKyDuLieu");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.NhatKyHoaDonEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgaySua")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiDungId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.ToTable("NhatKyHoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.PhiDuyTriEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ApDungKhiTieuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KieuTinh")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PhiDuyTri");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.PhienInThongBaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("DaInXong")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayTao")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiDocId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuongHopDong")
                        .HasColumnType("int");

                    b.Property<string>("TenPhien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhienInThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.PhuongThucThanhToanEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTaPhuongThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.SoDocChiSoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ChotSo")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KyGhiChiSoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("NgayChot")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NguoiDungId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoDhdaGhi")
                        .HasColumnType("int");

                    b.Property<string>("TenSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuyenDocId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("KyGhiChiSoId");

                    b.HasIndex("TuyenDocId");

                    b.ToTable("SoDocChiSo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.SuCoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSuCo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuCo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ThatThoatEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CongIch")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DongHoNuocId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Khac")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Sldhc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("ThoiGian")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("XucXa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DongHoNuocId");

                    b.ToTable("ThatThoat");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ThongBaoEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DanhMucThongBaoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("KieuGuiTB")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiTB")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiTT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucThongBaoId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.TrangThaiGhiEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("KhongChoPhepGhi")
                        .HasColumnType("bit");

                    b.Property<bool?>("KhongChoPhepHienThi")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaNgan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoTt")
                        .HasColumnType("int");

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiGhi");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.TuyenDocEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("KhuVucId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaTuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiQuanLyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiThuTienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhuVucId");

                    b.ToTable("TuyenDoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.VungEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NhaMayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vung");
                });

            modelBuilder.Entity("ChucNangEntityNguoiDungEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.ChucNangEntity", null)
                        .WithMany()
                        .HasForeignKey("ChucNangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.NguoiDungEntity", null)
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChucVuEntityNguoiDungEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.ChucVuEntity", null)
                        .WithMany()
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.NguoiDungEntity", null)
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NguoiDungEntityNhaMayEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.NguoiDungEntity", null)
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.NhaMayEntity", null)
                        .WithMany()
                        .HasForeignKey("NhaMayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiSoDongHoEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DongHoNuocEntity", "DongHoNuoc")
                        .WithMany("ChiSoDongHo")
                        .HasForeignKey("DongHoNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.SoDocChiSoEntity", "SoDocChiSo")
                        .WithMany("ChiSoDongHos")
                        .HasForeignKey("SoDocChiSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.TrangThaiGhiEntity", "TrangThaiGhi")
                        .WithMany("ChiSoDongHo")
                        .HasForeignKey("TrangThaiGhiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DongHoNuoc");

                    b.Navigation("SoDocChiSo");

                    b.Navigation("TrangThaiGhi");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiTietGiaEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DoiTuongGiaEntity", "DoiTuongGia")
                        .WithMany("ChiTietGia")
                        .HasForeignKey("DoiTuongGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTuongGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiTietHoaDonEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.HoaDonEntity", "HoaDon")
                        .WithMany("ChiTietHoaDon")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhSachHoDanEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.KhuVucEntity", "KhuVuc")
                        .WithMany("DanhSachHoDan")
                        .HasForeignKey("KhuVucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuVuc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DoiTuongGiaEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DanhSachDoiTuongGiaEntity", "DanhSachDoiTuongGia")
                        .WithMany("DoiTuongGia")
                        .HasForeignKey("DanhSachDoiTuongGiaId");

                    b.HasOne("WaterCity.Contract.Repository.Models.PhiDuyTriEntity", "PhiDuyTri")
                        .WithMany("DoiTuongGia")
                        .HasForeignKey("PhiDuyTriId");

                    b.Navigation("DanhSachDoiTuongGia");

                    b.Navigation("PhiDuyTri");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DongHoNuocEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DongHoNuocEntity", null)
                        .WithMany("DongHoCon")
                        .HasForeignKey("DongHoNuocEntityId");

                    b.HasOne("WaterCity.Contract.Repository.Models.HopDongEntity", "HopDong")
                        .WithMany("DongHoNuoc")
                        .HasForeignKey("HopDongId");

                    b.Navigation("HopDong");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DongHoNuocSuCoEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DongHoNuocEntity", "DongHoNuoc")
                        .WithMany("DongHoNuocSuCo")
                        .HasForeignKey("DongHoNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.SuCoEntity", "SuCo")
                        .WithMany("DongHoNuocSuCos")
                        .HasForeignKey("SuCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DongHoNuoc");

                    b.Navigation("SuCo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HoaDonEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.ChiSoDongHoEntity", "ChiSoDongHo")
                        .WithMany("HoaDon")
                        .HasForeignKey("ChiSoDongHoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.PhienInThongBaoEntity", "PhienInThongBao")
                        .WithMany("HoaDon")
                        .HasForeignKey("PhienInThongBaoId");

                    b.HasOne("WaterCity.Contract.Repository.Models.DanhMucSeriHoaDonEntity", "DanhMucSeriHoaDon")
                        .WithMany()
                        .HasForeignKey("SeriHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiSoDongHo");

                    b.Navigation("DanhMucSeriHoaDon");

                    b.Navigation("PhienInThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HopDongEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DoiTuongGiaEntity", "DoiTuongGia")
                        .WithMany("HopDong")
                        .HasForeignKey("DoiTuongGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.KhachHangEntity", "KhachHang")
                        .WithMany("HopDong")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.TuyenDocEntity", "TuyenDoc")
                        .WithMany("HopDong")
                        .HasForeignKey("TuyenDocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTuongGia");

                    b.Navigation("KhachHang");

                    b.Navigation("TuyenDoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KhuVucEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.VungEntity", "Vung")
                        .WithMany("KhuVuc")
                        .HasForeignKey("VungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vung");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.LichSuSMSEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.MauTinSMSEntity", "MauTinSMS")
                        .WithMany("LichSuSMS")
                        .HasForeignKey("MauTinSMSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MauTinSMS");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.NhatKyHoaDonEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.HoaDonEntity", "HoaDon")
                        .WithMany("NhatKyHoaDon")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.SoDocChiSoEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.KyGhiChiSoEntity", "KyGhiChiSo")
                        .WithMany("SoDocChiSo")
                        .HasForeignKey("KyGhiChiSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.TuyenDocEntity", "TuyenDoc")
                        .WithMany("SoDocChiSo")
                        .HasForeignKey("TuyenDocId");

                    b.Navigation("KyGhiChiSo");

                    b.Navigation("TuyenDoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ThatThoatEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DongHoNuocEntity", "DongHoNuoc")
                        .WithMany("ThatThoat")
                        .HasForeignKey("DongHoNuocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DongHoNuoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ThongBaoEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.DanhMucThongBaoEntity", "DanhMucThongBao")
                        .WithMany("ThongBao")
                        .HasForeignKey("DanhMucThongBaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterCity.Contract.Repository.Models.HoaDonEntity", "HoaDon")
                        .WithMany("ThongBao")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucThongBao");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.TuyenDocEntity", b =>
                {
                    b.HasOne("WaterCity.Contract.Repository.Models.KhuVucEntity", "KhuVuc")
                        .WithMany("TuyenDoc")
                        .HasForeignKey("KhuVucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuVuc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.ChiSoDongHoEntity", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhMucThongBaoEntity", b =>
                {
                    b.Navigation("ThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DanhSachDoiTuongGiaEntity", b =>
                {
                    b.Navigation("DoiTuongGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DoiTuongGiaEntity", b =>
                {
                    b.Navigation("ChiTietGia");

                    b.Navigation("HopDong");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.DongHoNuocEntity", b =>
                {
                    b.Navigation("ChiSoDongHo");

                    b.Navigation("DongHoCon");

                    b.Navigation("DongHoNuocSuCo");

                    b.Navigation("ThatThoat");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HoaDonEntity", b =>
                {
                    b.Navigation("ChiTietHoaDon");

                    b.Navigation("NhatKyHoaDon");

                    b.Navigation("ThongBao");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.HopDongEntity", b =>
                {
                    b.Navigation("DongHoNuoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Navigation("HopDong");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KhuVucEntity", b =>
                {
                    b.Navigation("DanhSachHoDan");

                    b.Navigation("TuyenDoc");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.KyGhiChiSoEntity", b =>
                {
                    b.Navigation("SoDocChiSo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.MauTinSMSEntity", b =>
                {
                    b.Navigation("LichSuSMS");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.PhiDuyTriEntity", b =>
                {
                    b.Navigation("DoiTuongGia");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.PhienInThongBaoEntity", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.SoDocChiSoEntity", b =>
                {
                    b.Navigation("ChiSoDongHos");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.SuCoEntity", b =>
                {
                    b.Navigation("DongHoNuocSuCos");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.TrangThaiGhiEntity", b =>
                {
                    b.Navigation("ChiSoDongHo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.TuyenDocEntity", b =>
                {
                    b.Navigation("HopDong");

                    b.Navigation("SoDocChiSo");
                });

            modelBuilder.Entity("WaterCity.Contract.Repository.Models.VungEntity", b =>
                {
                    b.Navigation("KhuVuc");
                });
#pragma warning restore 612, 618
        }
    }
}
